input {
  http_poller {
    urls => {
      test1 => "http://google.com"
    }
    automatic_retries => 1
    #interval => 60
    schedule => {"every" => "60s"}
    request_timeout => 8
    metadata_target => http_poller_metadata
    type => "website_healthcheck"
  } 
}

filter {
    if [http_poller_metadata]{
      mutate {
        add_field => {
          "@host" => "%{http_poller_metadata[name]}"
        }
      }
    }
    # Classify slow requests
    if [http_poller_metadata][runtime_seconds] and [http_poller_metadata][runtime_seconds] > 0.5 {
      mutate {
        add_tag => "slow_request"
      }
    }
    # Classify requests that can't connect or have an unexpected response code
    if [http_request_failure] or [http_poller_metadata][code] != 200 {
      # Tag all these events as being bad
      mutate {add_tag => "bad_request"}
    } 
    if "bad_request" in [tags] {
      # Tag all but first message every 10m as "_throttled_poller_alert"
      # We will later drop messages tagged as such
      throttle {
        key => "%{@host}-RequestFailure"
        period => 600
        before_count => -1
        after_count => 1
        add_tag => "throttled_poller_alert"
      }
    
      # Drop all throttled events
      if "throttled_poller_alert" in [tags] {
        drop{}
      }
      # The SNS output plugin requres special fields to send its messages
      # We need to set them here, but for more robust solutions (tolerant of logstash restarts), logging to elasticsearch and using
      # the Watcher plugin is advised - but that's not free so we will look into open source solutions - perhaps ElastAlert
      mutate {
        add_field => {
          sns_subject => "%{@host} is not healthy at all! %{@tags}"
          sns_message => '%{http_request_failure}'
          codec => json
        }
      }
   }
}y